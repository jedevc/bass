(def *buildkit-repository* "moby/buildkit")

; bumped by hack/bump-buildkit
(def *buildkit-pkg* "github.com/moby/buildkit")
(def *buildkit-commit* "f1f27537acc758d10765876fca9e5270c674de55")

(def *cni-version* "v1.1.1")

(provide [image bass-config test-config]
  (use (.git (linux/alpine/git)))

  (defn image [os arch config-dir]
    (from (docker-build
            (git:checkout (str "https://" *buildkit-pkg*) *buildkit-commit*)
            {:os "linux"})
      ($ apk add --no-cache dumb-init iptables ip6tables dnsmasq) ; TODO: nix?
      ($ mkdir -p /opt/cni/bin/ /etc/buildkit/)
      ($ cp $dnsname /opt/cni/bin/dnsname)
      ($ tar -zxf (cni os arch) -C /opt/cni/bin/)
      ($ sh -c "cp $0/* /etc/buildkit/" $config-dir)))

  (defn buildkitd-toml [cni-path]
    (str
      "# support insecure! thunks\n"
      "insecure-entitlements = [\"security.insecure\"]\n"
      "\n"
      "# configure bridge networking\n"
      "[worker.oci]\n"
      "networkMode = \"cni\"\n"
      "cniConfigPath = \"" (/etc/buildkit/ cni-path) "\"\n"
      "\n"
      "[worker.containerd]\n"
      "networkMode = \"cni\"\n"
      "cniConfigPath = \"" (/etc/buildkit/ cni-path) "\"\n"))

  (def dnsname
    (subpath
      (from (linux/golang)
        (cd git:github/containers/dnsname/ref/v1.3.1/
          (-> ($ make binaries)
              (with-env {:CGO_ENABLED "0"}))))
      ./bin/dnsname))

  (defn cni [os arch]
    (subpath
      (from (linux/alpine)
        ($ apk add --no-cache curl)
        ($ curl -Ls
           (str "https://github.com/containernetworking/plugins"
                "/releases/download/" *cni-version*
                "/cni-plugins-" os "-" arch "-" *cni-version* ".tgz")
           -o ./cni.tgz))
      ./cni.tgz))

  (defn cni-config [name subnet]
    {:cniVersion "0.4.0"
     :name name
     :plugins
     [{:type "bridge"
       :bridge (str name "0")
       :isDefaultGateway true
       :ipMasq true
       :hairpinMode true
       :ipam {:type "host-local",
              :ranges [[{:subnet subnet}]]}}
      {:type "firewall"}
      {:type "dnsname"
       :domainName "dns.bass"
       :capabilities {:aliases true}}
      ]})

  (def bass-config
    (mkfs
      ./bass.conflist (json (cni-config "bass" "10.64.0.0/16"))
      ./buildkitd.toml (buildkitd-toml ./bass.conflist)))

  (def test-config
    (mkfs
      ./test.conflist (json (cni-config "bass" "10.73.0.0/16"))
      ./buildkitd.toml (str (buildkitd-toml ./test.conflist)
                            "\n"
                            ; override the default nameserver
                            "[dns]\n"
                            "nameservers = [\"10.73.0.1\", \"1.1.1.1\"]\n")))
  )
