(def test-cache-path
  (cache-dir (str "test-cache-sync-" *random*) :locked))

(def alpine (linux/alpine))

(defn counter [tag]
  (subpath
    (from alpine
      (-> ($ sh -xc "echo BEFORE; cat /var/cache/file; echo $0 >> /var/cache/file; echo AFTER; cat /var/cache/file; wc -l /var/cache/file; cat /var/cache/file | wc -l > count"
             $tag)
          (with-mount test-cache-path /var/cache/)))
    ./count))

(defn all [stream]
  (case (next stream :eof)
    :eof []
    val (cons val (all stream))))

(defn counts tags
  (let [files (map counter tags)]
    (-> ($ sh -c "cat $@ | sort -n" ignored & $files)
        (with-image (linux/alpine))
        (read :lines)
        all)))

(assert = ["1" "2" "3" "4" "5" "6"]
  (counts "a" "b" "c" "d" "e" "f"))
